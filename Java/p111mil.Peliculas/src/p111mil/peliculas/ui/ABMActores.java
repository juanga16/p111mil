/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p111mil.peliculas.ui;

import java.awt.Dialog;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import p111mil.peliculas.dao.ActorDao;
import p111mil.peliculas.modelo.Actor;

/**
 *
 * @author PC-MAESTRO
 */
public class ABMActores extends javax.swing.JFrame {
    private Principal principal;

    public void setPrincipal(Principal principal) {
        this.principal = principal;
    }
    
    /**
     * Creates new form ABMActores
     */
    public ABMActores() {
        initComponents();
        cargarTabla();               
        
        // Solamente se pueden seleccionar de a una fila
        tablaActores.setRowSelectionAllowed(true);
        tablaActores.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
        
    private void deshabilitarBotones() {
        botonEliminar.setEnabled(false);
        botonEditar.setEnabled(false);        
    }
    
    private void habilitarBotones() {
        // Si tengo una fila seleccionada, habilito los botones
        if (tablaActores.getSelectedRow() >= 0) {
            botonEliminar.setEnabled(true);
            botonEditar.setEnabled(true);
        }
    }
    
    private void cargarTabla() {
        deshabilitarBotones();
        
        ActorDao actorDao = new ActorDao();
        List<Actor> actores = actorDao.buscarTodos();
                        
        // Para alinear los numeros a la derecha
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);

        tablaActores.setModel(new ActorModeloTabla(actores));
               
        tablaActores.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaActores = new javax.swing.JTable();
        botonNuevo = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        tablaActores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaActores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaActoresMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaActoresMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablaActores);

        botonNuevo.setText("Nuevo");
        botonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonEditar.setText("Editar");
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(botonEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(botonEditar)
                        .addGap(0, 511, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonNuevo)
                    .addComponent(botonEliminar)
                    .addComponent(botonEditar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        principal.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void botonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoActionPerformed
        EdicionActor edicionActor = new EdicionActor(this, true);
        
        edicionActor.setLocationRelativeTo(null);
        edicionActor.setVisible(true);
        
        cargarTabla();
    }//GEN-LAST:event_botonNuevoActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        if (tablaActores.getSelectedRow() < 0) {
            return;
        }

        int filaSeleccionada = tablaActores.getSelectedRow();
        int idActor = (int) tablaActores.getValueAt(filaSeleccionada, 0);
        String nombreActorParaEliminar = (String) tablaActores.getValueAt(filaSeleccionada, 1);

        ActorDao actorDao = new ActorDao();
        Actor actorParaEliminar = actorDao.buscarPorId(idActor);

        // Para eliminar un pais verificamos que no tenga registros relacionados
        if (actorParaEliminar.getPeliculas().size() > 0) {
            JOptionPane.showMessageDialog(this, "El actor no puede ser eliminado, ya que tiene informacion relacionada", "Borrado de actores", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int respuesta = JOptionPane.showConfirmDialog(this, "Â¿Desea eliminar el actor " + nombreActorParaEliminar + " ?", "Borrado de actores", JOptionPane.YES_NO_OPTION);

        if (respuesta == JOptionPane.YES_OPTION) {
            actorDao.eliminar(idActor);

            cargarTabla();
            JOptionPane.showMessageDialog(this, "El actor " + nombreActorParaEliminar + " fue eliminado", "Borrado de actores", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed
        // Si no tengo nada seleccionado me voy
        if (tablaActores.getSelectedRow() < 0) {
            return;
        }
        
        int filaSeleccionada = tablaActores.getSelectedRow();
        
        // Usamos el metodo getValueAt para obtener el ID (que es la columna 0)
        int idActor = (int) tablaActores.getValueAt(filaSeleccionada, 0);
        
        ActorDao actorDao = new ActorDao();        
        Actor actorParaEditar = actorDao.buscarPorId(idActor);
    }//GEN-LAST:event_botonEditarActionPerformed

    private void tablaActoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaActoresMouseClicked
        habilitarBotones();
    }//GEN-LAST:event_tablaActoresMouseClicked

    private void tablaActoresMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaActoresMouseReleased
        habilitarBotones();
    }//GEN-LAST:event_tablaActoresMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ABMActores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ABMActores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ABMActores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ABMActores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ABMActores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonNuevo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaActores;
    // End of variables declaration//GEN-END:variables
}
